"Types of Data ranges for the alarm report response"
enum DashBoardDevicesAlarmReportTimeRangeType{
  "Last hour"
  ONE_HOUR,
  "Last two hours"
  TWO_HOURS,
  "Last three hours"
  THREE_HOURS
}

"type of network status"
enum DashBoardDevicesDeviceNetworkStatus{
  "online status"
  ONLINE,
  "offline status"
  OFFLINE
}
"Types of alarm reports"
enum DashBoardDevicesAlarmReportType{
  "Ram usage alarms"
  RAM_MEMORY,
  "CPU usage alarms"
  CPU_USAGE,
  "Voltage alarms"
  VOLTAGE,
  "Device temperature alarms"
  TEMPERATURE
}

"Top n Devices list for the DashBoardDevicesAlarmReport"
type DashBoardDevicesAlarmReportTopDevices{
  "device Serial Number"
  sn: String!
  "Device hostname"
  hostname: String!
  "Number of alarms reported by the device"
  alarmsCount: Int!
  "Link to navigate to the device info page"
  deviceDetailLink: String
}

"TimeRange description DashBoardDevicesAlarmReportTimeRange"
type DashBoardDevicesAlarmReportTimeRange{
    "Time range type"
    timeRange: DashBoardDevicesAlarmReportTimeRangeType!
    "Total alarm count"
    alarmsCount: Int!
    "Total number of alarmed devices"
    devicesCount: Int!
    "Order within list, lowest is first"
    order: Int!
    "Top alarmed devices "
    topDevices: [DashBoardDevicesAlarmReportTopDevices]
    "Link to browse all the alarmed devices"
    fullDevicesListLink: String
  }

"Alarm report type used for DashBoardDevices"
type DashBoardDevicesAlarmReport {
  "Report alarm type"
  type: DashBoardDevicesAlarmReportType!
  "Time ranges with each timeframe data"
  timeRanges: [DashBoardDevicesAlarmReportTimeRange]
  "start time applied to the query"
  queriedTime: BigInt
}

"Device Network status event type used for DashBoardDevices"
type DashBoardDevicesNetworkEvent{
  "Network status"
  state: DashBoardDevicesDeviceNetworkStatus!
  "Serial of device"
  serial: String!
  "hostname of device"
  hostname: String!
  "Cuenca to Device belongs"
  cuenca: String!
}

"Object used to represent subgroups data on devices online Vs offline chart"
type DashBoardDeviceNetworkStatusSubSerie{
  "serie name"
  name: String!
  "serie value"
  value: Int!
}

"Object to provide data at device network status chart in DashboardDevices. (online Vs offline) chart"
type DashBoardDeviceNetworkStatus{
  "Cuenca name used to show in devices on Vs devices off chart"
  name: String!
  "Custom object type to provide data to chart in DasboardDevice microservice"
  series: [DashBoardDeviceNetworkStatusSubSerie]!
}

"Device transactions group by interval and groupName"
type DashboardDeviceTransaction{
  interval: BigInt!
  "Cuenca name which serves as a grouping criterion"
  groupName: String
  "Success transaction quantity "
  transactions: Int!
  "failed transaction quantity"
  errors: Int!
}

type DashboardDeviceTransactionSucess{
  "Group or cuenca name "
  name: String!
  "Success transaction quantity"
  value: Int!
}
"Object to provide data at influx of user chart"
type DashboardDeviceTransactionSucessArray{
  "TimeRange of sucess transaction"
  timeRange: String!
  ""
  data: [DashboardDeviceTransactionSucess]!
}

"Event that informs when it's necessary to update the device transaction stats"
type DeviceTransactionsUpdatedEvent{  
  timestamp: BigInt!
}

type Query {
  "Get a report summary of alarmed devices to provide data to alarm card charts in Dashboard-devices"
  getDashBoardDevicesAlarmReport(type: DashBoardDevicesAlarmReportType!, startTime: BigInt!): DashBoardDevicesAlarmReport
  "Get data agrouped by groupName to show in Dashboard Devices online Vs Ofline"
  getDashBoardDevicesCurrentNetworkStatus: [DashBoardDeviceNetworkStatus]!
  "get the group names list in wich success transactions were made"
  getCuencaNamesWithSuccessTransactionsOnInterval(startDate: BigInt, endDate: BigInt): [String]!
  "get the sucess transactions grouped by Groupname "
  getSucessDeviceTransactionsGroupByGroupName(nowDate: BigInt!): [DashboardDeviceTransactionSucessArray]!
  "get the sucess and failed transactions grouped by Groupname "
  getDeviceTransactionsGroupByTimeInterval(startDate: BigInt, endDate: BigInt, groupName: String): [DashboardDeviceTransaction]!
  "get total number of devices registred in the platform"
  getDeviceDashBoardTotalAccount: Int!
  
}

type Subscription {
  "Executed when a Device is reported as online "
  onDashBoardDeviceOnlineReported: [DashBoardDeviceNetworkStatus]!
  "Executed when a Device is reported as offline"
  onDashBoardDeviceOfflineReported: [DashBoardDeviceNetworkStatus]!
  "Executed when a device reports A Cpu_usage alarm"
  onDashBoardDeviceCpuUsageAlarmActivated: DashBoardDevicesAlarmReport!
  "Executed when a device reports A Ram memory alarm"
  onDashBoardDeviceRamMemoryAlarmActivated: DashBoardDevicesAlarmReport!
  "Executed when a device reports A temperature alarm"
  onDashBoardDeviceTemperatureAlarmActivated: DashBoardDevicesAlarmReport!
  "Executed when a device reports A low voltage alarm"
  onDashBoardDeviceLowVoltageAlarmReported: DashBoardDevicesAlarmReport!
  "Executed when a device reports A high voltage alarm"
  onDashBoardDeviceHighVoltageAlarmReported: DashBoardDevicesAlarmReport!
  "Executed when there is new available data to show in charts about transactions"
  deviceTransactionsUpdatedEvent: DeviceTransactionsUpdatedEvent!
}